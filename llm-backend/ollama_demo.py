import json
from langchain_ollama import ChatOllama
from langchain.prompts import ChatPromptTemplate
from pydantic import BaseModel, Field  
from docx import Document  

class ContractInfo(BaseModel):
    contract_number: str = Field(..., description="‚Ññ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
    contract_date: str = Field(..., description="–î–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
    end_date: str = Field(..., description="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
    counterparty: str = Field(..., description="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞")
    country: str = Field(..., description="–°—Ç—Ä–∞–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞")
    amount: str = Field(..., description="–°—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
    contract_currency: str = Field(..., description="–í–∞–ª—é—Ç–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
    payment_currency: str = Field(..., description="–í–∞–ª—é—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞")

llm = ChatOllama(model="Nemo-12B", temperature=0)
structured_llm = llm.with_structured_output(ContractInfo)

examples = """
–ü—Ä–∏–º–µ—Ä:
–¢–µ–∫—Å—Ç: "–î–æ–≥–æ–≤–æ—Ä ‚Ññ12345 –æ—Ç 12 04 2024 –≥–æ–¥–∞.
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ 31 –¥–µ–∫–∞–±—Ä—è 2025 –≥–æ–¥–∞. 
–°—É–º–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ 100 000 000 —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä—É–±–ª–µ–π. 
–í–∞–ª—é—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –ø–ª–∞—Ç–µ–∂–∞ ‚Äî —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏."
JSON:
{{
  "contract_number": "12345",
  "contract_date": "2024-04-12",
  "end_date": "2025-12-31",
  "counterparty": "–û–ê–û –ë–ú–ó",
  "country": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–µ–ª–∞—Ä—É—Å—å",
  "amount": "100000000 —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏",
  "contract_currency": "—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏",
  "payment_currency": "—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏"
}}
"""

# üîß –ü—Ä–æ–º–ø—Ç
prompt = ChatPromptTemplate.from_messages([
    ("system", f"""–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–æ–≥–æ–≤–æ—Ä–∞.
–û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –∑–∞–ø–æ–ª–Ω—è–π –≤—Å–µ –ø–æ–ª—è —Ç–æ—á–Ω–æ –ø–æ —Ç–µ–∫—Å—Ç—É –¥–æ–≥–æ–≤–æ—Ä–∞.
–ü—Ä–∞–≤–∏–ª–∞:
- –î–∞—Ç—ã –≤—Å–µ–≥–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2024-04-12).
- –°—É–º–º—É –∏–∑–≤–ª–µ–∫–∞–π —Ç–æ–ª—å–∫–æ –∫–∞–∫ —á–∏—Å–ª–æ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: "100000000 —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏").
- –í–∞–ª—é—Ç–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∏ –≤–∞–ª—é—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —è–≤–Ω–æ –Ω–∞–∑–≤–∞–Ω—ã ("—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏", "–¥–æ–ª–ª–∞—Ä—ã –°–®–ê"), –∞ –Ω–µ "–≤–∞–ª—é—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞".
- –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ —É–∫–∞–∑—ã–≤–∞–π –ø–æ–ª–Ω–æ—Å—Ç—å—é, –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –∏–ª–∏ –≤—ã–¥—É–º–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

{examples}
"""),
    ("user", """–ò–∑–≤–ª–µ–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –∑–∞–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:
- ‚Ññ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
- –¥–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ (—Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD)
- –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ (—Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD)
- –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç (–ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ)
- —Å—Ç—Ä–∞–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞
- —Å—É–º–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –∏ –≤–∞–ª—é—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: "100000000 —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏")
- –≤–∞–ª—é—Ç–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏")
- –≤–∞–ª—é—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä—É–±–ª–∏")

–¢–µ–∫—Å—Ç –¥–æ–≥–æ–≤–æ—Ä–∞:
{contract_text}""")
])

chain = prompt | structured_llm

def load_docx_text(path: str) -> str:
    doc = Document(path)
    return "\n".join([para.text for para in doc.paragraphs if para.text.strip()])

contract_text = load_docx_text("8A16.ocr (1).docx")

# üîç –ø–µ—á–∞—Ç–∞–µ–º —Ç–æ, —á—Ç–æ —É—Ö–æ–¥–∏—Ç –≤ LLM
messages = prompt.format_messages(contract_text=contract_text)
print("\n=== –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è LLM ===")
for msg in messages:
    print(f"[{msg.type.upper()}]\n{msg.content[:2000]}\n")

# üöÄ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
result = chain.invoke({"contract_text": contract_text})

with open("contract_info.json", "w", encoding="utf-8") as f:
    json.dump(result.dict(), f, ensure_ascii=False, indent=2)

print("‚úÖ JSON —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ contract_info.json")
